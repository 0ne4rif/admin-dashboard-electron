{"version":3,"sources":["webpack:///src/app/services/dashboard.service.ts","webpack:///src/app/components/bar-chart/bar-chart.component.ts","webpack:///src/app/components/bar-chart/bar-chart.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/token-storage.service.ts","webpack:///src/app/helpers/auth.interceptor.ts","webpack:///src/app/components/pie-chart/pie-chart.component.ts","webpack:///src/app/components/pie-chart/pie-chart.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DASH_API","httpOptions","headers","DashboardService","http","get","register","BarChartComponent","_service","getBarChartData","getDashboardMetaData","subscribe","response","console","log","chartBar","xLabels","map","name","yValue","value","dataset","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","chart","type","options","scales","y","beginAtZero","display","error","environment","production","AuthGuard","auth","router","next","state","isLoggedIn","window","alert","navigate","AUTH_API","LoginService","username","password","post","DashboardComponent","token","getLoggedUser","loggedUser","getUser","Object","keys","length","currentUser","getTableUsers","signOut","tableUsers","AppComponent","title","LoginComponent","fb","tokenStorage","isLoginFailed","errorMessage","roles","loginForm","group","required","email","getToken","login","saveToken","saveUser","err","message","AppModule","provide","useClass","multi","TOKEN_KEY","USER_KEY","TokenStorageService","removeUserSession","sessionStorage","removeItem","clear","localStorage","setItem","getItem","authToken","user","JSON","stringify","parse","TOKEN_HEADER_KEY","AuthInterceptor","req","handle","req1","clone","set","authInterceptorProviders","PieChartComponent","getDoughnutChart","chartDonut","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst DASH_API = \"http://test-demo.aemenersol.com/api/dashboard\";\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getDashboardMetaData(): Observable<any> {\n    return this.http.get(DASH_API, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.scss']\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n\r\n  chart: any;\r\n\r\n  constructor(\r\n    private _service: DashboardService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getBarChartData();\r\n  }\r\n\r\n  getBarChartData() {\r\n    this._service.getDashboardMetaData().subscribe((response) => {\r\n      console.log('Successful get bar chart data', response);\r\n      let chartBar = response.chartBar;\r\n\r\n      const xLabels = chartBar.map((chartBar: { name: any; }) => chartBar.name);\r\n      const yValue = chartBar.map((chartBar: { value: any; }) => chartBar.value);\r\n\r\n      const dataset = {\r\n        labels: xLabels,\r\n        datasets: [{\r\n          label: 'Bar',\r\n          data: yValue,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n            'rgba(255, 205, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)'\r\n          ],\r\n          borderColor: [\r\n            'rgb(255, 99, 132)',\r\n            'rgb(255, 159, 64)',\r\n            'rgb(255, 205, 86)',\r\n            'rgb(75, 192, 192)',\r\n            'rgb(54, 162, 235)',\r\n            'rgb(153, 102, 255)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      };\r\n\r\n      this.chart = new Chart('canvas', {\r\n        type: 'bar',\r\n        data: dataset,\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              display: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    }, (error) => {\r\n      console.log('Error getting bar chart data', error);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\ninterface Bars {\r\n  name: string;\r\n  value: number;\r\n}\r\n","<div class=\"relative\">\r\n  <canvas id=\"canvas\">{{ chart }}</canvas>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from '../services/token-storage.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public auth: TokenStorageService,\n    public router: Router\n  ) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | boolean {\n    if (this.auth.isLoggedIn !== true) {\n      window.alert(\"Please login to proceed!\");\r\n      this.router.navigate(['']);\r\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = \"http://test-demo.aemenersol.com/api/account/login\";\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API, { username, password }, httpOptions);\r\n  }\r\n}\r\n","<div *ngIf=\"currentUser; else loggedOut\" class=\"content-center\">\r\n  <header class=\"text-gray-100 bg-gray-900 body-font shadow w-full\">\r\n    <div class=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\r\n      <nav class=\"flex lg:w-2/5 flex-wrap items-start text-base md:ml-auto\">\r\n        <a class=\"mr-5 font-medium\">Dashboard</a>\r\n      </nav>\r\n      <div class=\"lg:w-2/5 inline-flex lg:justify-end ml-5 lg:ml-0\">\r\n\r\n        <!--<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n        </svg>-->\r\n        <a class=\"text-white cursor-pointer py-2 px-3 rounded-lg\" (click)=\"logout()\">\r\n          Sign Out\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </header>\r\n\r\n  <h2 class=\"ml-14 font-bold text-2xl m-3\">Overview</h2>\r\n  <!-- component -->\r\n  <div class=\"flex flex-row justify-center w-full\">\r\n    <div class=\"w-2/3 ml-14 mr-6 border border-gray-400 rounded\">\r\n      <app-bar-chart></app-bar-chart>\r\n    </div>\r\n    <div class=\"w-2/3 mr-14 ml-6 border border-gray-400 rounded overflow-scroll\">\r\n      <app-pie-chart></app-pie-chart>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <h2 class=\"ml-14 font-bold text-2xl m-3\">User List</h2>\r\n  <table class=\"border-collapse w-11/12 mx-auto mb-6\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"p-3 font-bold bg-gray-200 text-gray-600 border border-gray-300 hidden lg:table-cell\">#</th>\r\n        <th class=\"p-3 font-bold bg-gray-200 text-gray-600 border border-gray-300 hidden lg:table-cell\">First Name</th>\r\n        <th class=\"p-3 font-bold bg-gray-200 text-gray-600 border border-gray-300 hidden lg:table-cell\">Last Name</th>\r\n        <th class=\"p-3 font-bold bg-gray-200 text-gray-600 border border-gray-300 hidden lg:table-cell\">User Name</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let users of tableUsers; let index = index\"\r\n          class=\"bg-white lg:hover:bg-gray-100 flex lg:table-row flex-row lg:flex-row flex-wrap lg:flex-no-wrap mb-10 lg:mb-0\"\r\n          >\r\n        <td class=\"w-full lg:w-auto p-3 text-gray-800 text-center border border-b block lg:table-cell relative lg:static\">{{ index }}</td>\r\n        <td class=\"w-full lg:w-auto p-3 text-gray-800 text-center border border-b block lg:table-cell relative lg:static\">{{ users.firstName }}</td>\r\n        <td class=\"w-full lg:w-auto p-3 text-gray-800 text-center border border-b block lg:table-cell relative lg:static\">{{ users.lastName }}</td>\r\n        <td class=\"w-full lg:w-auto p-3 text-gray-800 text-center border border-b block lg:table-cell relative lg:static\">{{ users.username}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n  Please login.\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { TokenStorageService } from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  chartDonut: any;\r\n  chartBar: any;\r\n  tableUsers: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private token: TokenStorageService,\r\n    private _service: DashboardService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n    this.getTableUsers();\r\n\r\n  }\r\n\r\n  getLoggedUser = () => {\r\n    const loggedUser: Object = this.token.getUser();\r\n    console.log('User from Homepage:', loggedUser);\r\n    if (Object.keys(loggedUser).length === 0) {\r\n      this.router.navigate(['login']);\r\n    }\r\n  };\r\n\r\n  logout(): void {\r\n    this.token.signOut();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  getTableUsers() {\r\n    this._service.getDashboardMetaData().subscribe((response) => {\r\n      console.log(\"Successful getting users data\", response);\r\n     \r\n      this.tableUsers = response.tableUsers;\r\n      console.log(response.tableUsers);\r\n    }, (error) => {;\r\n      console.log(\"Fail getting users data\", error);\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'admin-dashboard';\n}\n","<div class=\"container-fluid p-0\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../../services/login.service';\r\nimport { TokenStorageService } from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _service: LoginService,\r\n    private router: Router,\r\n    private tokenStorage: TokenStorageService\r\n    \r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  login() {\r\n    const data = this.loginForm.value;\r\n\r\n    if (data.username && data.password) {\r\n      this._service.login(data.username, data.password).subscribe((response) => {\r\n        this.isLoggedIn = true;\r\n        this.tokenStorage.saveToken(response);\r\n        this.tokenStorage.saveUser(response);\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        console.log('Login success', response);\r\n        window.alert('Login success!');\r\n        this.router.navigate(['dashboard']);\r\n      }, (err) => {\r\n        this.isLoginFailed = true;\r\n        this.errorMessage = err.error.message\r\n        console.log('Login fail', err);\r\n        window.alert('Login failed!');\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"mx-auto md:w-full md:max-w-md bg-white shadow-md rounded px-8 pt-6 pb-8 mt-24 mb-4 flex flex-col\">\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n    <div class=\"mb-4\">\r\n      <div class=\"bg-grey font-medium text-center\">\r\n        <h3>Sign in to your dashboard</h3>\r\n      </div>\r\n      <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"username\">\r\n        Username\r\n      </label>\r\n      <input class=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\" formControlName=\"username\" type=\"email\" placeholder=\"Username\">\r\n    </div>\r\n    <div class=\"mb-6\">\r\n      <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"password\">\r\n        Password\r\n      </label>\r\n      <input class=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\" formControlName=\"password\" type=\"password\" placeholder=\"Password\">\r\n    </div>\r\n    <div class=\"flex items-center justify-between\">\r\n      <button class=\"bg-blue-600 text-white font-bold py-2 px-4 rounded\" type=\"submit\">\r\n        SIGN IN\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nimport { AuthInterceptor } from './helpers/auth.interceptor';\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    BarChartComponent,\n    PieChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n    localStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = sessionStorage.getItem(TOKEN_KEY);\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  public removeUserSession = () => {\r\n    sessionStorage.removeItem(USER_KEY);\r\n    sessionStorage.removeItem(TOKEN_KEY);\r\n  };\r\n}\r\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../services/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private token: TokenStorageService\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const token = this.token.getToken();\r\n    //  if (token != null) {\r\n    //    authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    //  }\r\n    //  return next.handle(authReq);\r\n    //}\r\n\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const req1 = req.clone({\r\n      headers: req.headers.set(TOKEN_HEADER_KEY, `Bearer ${token}`),\r\n    });\r\n\r\n    return next.handle(req1);\r\n  }\r\n}\r\n  export const authInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ];\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../services/dashboard.service';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n\n  chart: any;\n\n  constructor(\n    private _service: DashboardService\n  ) {\n    \n  }\n\n  ngOnInit() {\n    this.getDoughnutChart();\n  }\n\n  getDoughnutChart() {\n    this._service.getDashboardMetaData().subscribe((response) => {\r\n      console.log('Successful get doughnut chart data', response);\r\n      let chartDonut = response.chartDonut;\r\n\r\n      const xLabels = chartDonut.map((chartDonut: { name: any; }) => chartDonut.name);\r\n      const yValue = chartDonut.map((chartDonut: { value: any; }) => chartDonut.value);\r\n      \r\n      const dataset = {\r\n        labels: xLabels,\r\n        datasets: [{\r\n          label: 'Bar',\r\n          data: yValue,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n            'rgba(255, 205, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)'\r\n          ],\r\n          borderColor: [\r\n            'rgb(255, 99, 132)',\r\n            'rgb(255, 159, 64)',\r\n            'rgb(255, 205, 86)',\r\n            'rgb(75, 192, 192)',\r\n            'rgb(54, 162, 235)',\r\n            'rgb(153, 102, 255)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      };\r\n\r\n      this.chart = new Chart('canvas2', {\r\n        type: 'doughnut',\r\n        data: dataset,\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              display: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    }, (error) => {\r\n      console.log('Error getting doughnut chart data', error);\r\n    });\r\n\r\n  \r\n  }\n\n}\n","<div class=\"relative h-56\">\r\n  <canvas id=\"canvas2\">{{ chart }}</canvas>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, CanActivate, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthGuard } from './shared/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}